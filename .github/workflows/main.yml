name: CI Pipeline Model

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  CSV_URL: "MLProjects/train_studentperformancefactors.csv"
  TARGET_VAR: "Exam_Score"

jobs:
  build:
    runs-on: ubuntu-latest

    #permission content
    permissions:
      contents: read
      packages: write

    steps:
      #check-out repository under $GITHUB_WORKSPACE
      - uses: actions/checkout@v4

      # Setup Python 3.12.7
      - name: Set up Python 3.12.7
        uses: actions/setup-python@v4
        with:
          python-version: "3.12.7"
      
      # Check Env Variables
      - name: Check Env
        run: |
          echo $CSV_URL

      #debug repository
      - name: List files in the repository
        run: ls -R
 
      # Install mlflow
      - name: Install dependencies
        working-directory: ./MLProjects
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      
      # Run as a mlflow project
      - name: Run mlflow project
        run: |
          mlflow run file://$GITHUB_WORKSPACE/MLProjects --env-manager=local

      - name: Get latest MLflow run_id
        id: get_run_id
        run: |
          RUN_ID=$(ls -td mlruns/0/*/ | head -n 1 | cut -d'/' -f3)
          echo "RUN_ID=$RUN_ID" >> $GITHUB_ENV
          echo "Latest run_id: $RUN_ID"

       # Buat Dockerfile dari model
      - name: Generate Dockerfile
        run: |
          mlflow models generate-dockerfile --model-uri "runs:/${{ steps.get_run_id.outputs.run_id }}/model" -d .

      # Ganti base image di Dockerfile
      - name: Patch Dockerfile to use Ubuntu 22.04
        run: |
          sed -i 's/FROM ubuntu:20.04/FROM ubuntu:22.04/g' Dockerfile
          echo "--- Patched Dockerfile content ---"
          cat Dockerfile

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Tag Docker Image
        run: |
          docker tag smsml ${{ secrets.DOCKER_HUB_USERNAME }}/smsml:latest

      - name: Push Docker Image
        run: |
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/smsml:latest